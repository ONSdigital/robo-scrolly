-// Metadata for SEO and analytics
section.Meta
    prop.title How the population has changed in your area - ONS
    prop.description Demographic trends in local authorities within the UK
    prop.contentTitle Title for google analytics
    prop.releaseDate 2023-01-01
    prop.lastUpdated 2023-01-01
    prop.outputSeries slugforoutputseries
    prop.contentType robo-journalism

if !place
    section.Header
        prop.title How the population has changed in your area
        prop.label Select an area to see how the population has changed

else
    section.Header
        prop.title How the population has changed #{place.getName("in")}
        prop.label Select another area to see how the population has changed

    section.Highlight
        p In 2020, #{place.getName("the")} was the #{places.filterBy("parentcd", place.parentcd).getRank(place, "p2020").toWords("ordinal", {keepFirst: false})} largest local authority in #{lookup[place.parentcd].getName("the")}, with a total population of #{place.p2020.format()}. #{moreLess(place.p2020 - place.p2019, ["An increase", "A decrease", "No change"])} compared with 2019.
    
    section#chart-timeseries.Chart
        prop.chartType line-highlight
        prop.title Largest local authorities #{lookup[place.parentcd].getName("in")}, 2002-2020
        prop.footer Source: Office for National Statistics
        prop.data= places.filterBy("parentcd", place.parentcd).toData({x: ["2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020"], y: ["p2002", "p2003", "p2004", "p2005", "p2006", "p2007", "p2008", "p2009", "p2010", "p2011", "p2012", "p2013", "p2014", "p2015", "p2016", "p2017", "p2018", "p2019", "p2020"], z: "areanm"})
        prop.selected= place.areanm
        prop.padding-top= 20
        prop.padding-right= 120
        prop.padding-left= 80

    section.Section
        prop.title Population density #{place.getName("in")}
        p In 2020, the population density #{place.getName("in")} was #{place["density"].format()} people per square kilometre, which was #{moreLess(place["density"] - lookup[place.parentcd]["density"], ["more than", "less than", "the same as"])} #{lookup[place.parentcd].getName("the")} (#{lookup[place.parentcd]["density"].format()}), and #{moreLess(place["density"] - lookup["K02000001"]["density"], ["more than", "less than", "the same as"])} the United Kingdom as a whole (#{lookup["K02000001"]["density"].format()}).
    
    section#chart-density.Chart
        prop.chartType bar
        prop.title Densest local authorities #{lookup[place.parentcd].getName("in")}, 2020
        prop.footer Source: Office for National Statistics
        prop.data= places.filterBy("parentcd", place.parentcd).top("density", 5).toData({x: "density", y: "areanm"})
        prop.padding-left= 120
        prop.directLabel= true

    section.Section
        prop.title Median age #{place.getName("in")}
        p In 2020, the median age #{place.getName("in")} was #{place["age_med"].format(".0f")} years, which was #{moreLess(Math.round(place["age_med"]) - Math.round(lookup[place.parentcd]["age_med"]), ["older than", "younger than", "the same as"])} #{lookup[place.parentcd].getName("the")} (#{lookup[place.parentcd]["age_med"].format(".0f")} years), and #{moreLess(Math.round(place["age_med"]) - Math.round(lookup["K02000001"]["age_med"]), ["older than", "younger than", "the same as"])} the United Kingdom as a whole (#{lookup["K02000001"]["age_med"].format(".0f")} years).

    section#chart-age.Chart
        prop.chartType bar
        prop.xSuffix= " years"
        prop.directLabel= true
        prop.title Oldest local authorities #{lookup[place.parentcd].getName("in")}, 2020
        prop.footer Source: Office for National Statistics
        prop.data= places.filterBy("parentcd", place.parentcd).top("age_med", 5).toData({x: "age_med", y: "areanm"})
        prop.padding-left= 120
        prop.padding-right= 10

    section#chart-scatter.Chart
        prop.chartType scatter
        prop.title Scatter chart title 
        prop.data= places.toData({x:"density",y:"age_med",r:"area",areacd:"areacd",z:"parentcd",areanm:"areanm"})
        prop.height= "500px"
        prop.selected= place.areacd 
        prop.rKey= "r"
        prop.r= "2|20"

    section#map.Map
        prop.data= places.filterBy("parentcd", place.parentcd).toData({x: "density", areanm: "areanm",areacd:"areacd"})
        prop.selected= place.areacd
        prop.height= 300
        prop.title Density #{place.getName("in")} and other local authorities #{lookup[place.parentcd].getName("in")}
        prop.footer Source: Office for National Statistics
        prop.regioncd= place.parentcd


